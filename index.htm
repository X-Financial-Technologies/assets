<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	font-size:11.0pt;
	font-family:"Arial",sans-serif;}
a:link, span.MsoHyperlink
	{color:#467886;
	text-decoration:underline;}
.MsoChpDefault
	{font-family:"Arial",sans-serif;}
 /* Page Definitions */
 @page WordSection1
	{size:14.0in 8.5in;
	margin:.5in .5in .5in .5in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link="#467886" vlink="#96607D" style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal align=center style='text-align:center'>USDX WHITEPAPER</p>

<p class=MsoNormal align=center style='text-align:center'>Jan 2025</p>

<p class=MsoNormal align=center style='text-align:center'>Alexander Reed</p>

<p class=MsoNormal align=center style='text-align:center'>alex@alexandros-securities.com</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>ABSTRACT</b></p>

<p class=MsoNormal><a name="_Hlk189311755">The USDX protocol provides a
convenient USD denominated way for people to earn low risk yield on chain. The
primary protocol token (USDX) provides a clear unit of value and accumulates
generated yield.</a></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>EXECUTIVE SUMMARY </b></p>

<p class=MsoNormal>USDX is a stablecoin designed to maintain a 1 USD valuation
backed by short-term US Treasury bills. The yield generated by these T-bills is
automatically distributed to USDX token holders through rebasing. This feature
keeps the price of USDX stable while steadily increasing the balance of USDX
for token holders.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>X Protocol hosts the primary market that establishes the
price peg. KYC-verified users can deposit collateral, either USDC or fiat
currency, on our platform. In exchange, they receive USDX and can choose to
redeem USDX for collateral or withdraw USDX to any Ethereum address. Since X
Protocol offers an exchange rate of one dollar per USDX in both directions, any
price movement in the external (secondary) market can be traded in the primary
market to re-establish the peg.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>USDX is a rebasing ERC-20 token with a set of additional
features, including pausing, blocking/unblocking accounts, role-based access
control, and upgradability. The contract’s primary objective is to reflect the
T-bills’ annual percentage yield (APY) within the token’s value. It achieves
this through a reward multiplier rebasing mechanism, where the
addRewardMultiplier function is called daily to adjust the reward multiplier,
guaranteeing an accurate representation of yield from the underlying assets.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Acknowledging the complexities of handling rebasing tokens
in the DeFi ecosystem, the wUSDX contract serves as a wrapped token,
simplifying integration while preserving stability. The wUSDX contract is an
ERC-462 token vault, enabling users to deposit USDX in exchange for wUSDX
tokens. The USDX tokens are rebasing, whereas the wUSDX tokens are
non-rebasing, making wUSDX ideal for seamless integration with protocols in the
DeFi ecosystem.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The wUSDX contract incorporates the ERC-2612 permit
functionality, allowing the use of signatures to grant token allowances.
Additionally, the close relationship between the wUSDX and USDX contracts is
also worth noting; the wUSDX contract leverages the account block list from the
USDX contract to govern transfers and, specifically, prevent transfers from
accounts included in the block list.</p>

<p class=MsoNormal>Finally, the wUSDX token transfers can be paused in two
ways: either by being paused directly from within the wUSDX contract or in the
event the USDX contract is paused.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>1 INTRODUCTION</b></p>

<p class=MsoNormal><a name="_Hlk189312008">The USDX token is a dollar
denominated digital token. The protocol mints and redeems 1 USDX token for $ 1
USD value. USDX tokens earn yield generated by the protocol. The protocol earns
yield by investing the funds and tokens used to mint USDX tokens into fixed
income assets, initially short duration US Treasury bills.</a></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><img width=834
height=106 src="whitepaper_2020202_files/image001.jpg"
alt="A diagram of a block diagram&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>1.2 MATRIX</b></p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal><a name="_Hlk189316977">SEGMENT</a></p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>PROBLEM</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>SOLUTION</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>B2B Payments</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Difficult to track</p>
  <p class=MsoNormal>High fees</p>
  <p class=MsoNormal>Slow</p>
  <p class=MsoNormal>Lack transparency</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Stablecoins</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Stablecoins</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>No yield distribution</p>
  <p class=MsoNormal>Taxes</p>
  <p class=MsoNormal>USA regulatory compliance</p>
  <p class=MsoNormal>Depegging</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Rebasing</p>
  <p class=MsoNormal>Municipal bond underlying</p>
  <p class=MsoNormal>Investment Company Act of 1940</p>
  <p class=MsoNormal>Proof of reserves</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Liquidity Investing</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Yield</p>
  <p class=MsoNormal>Stability</p>
  <p class=MsoNormal>Liquidity</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Yield-bearing collateral</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>1.3 KEY CLIENTS</b></p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>SEGMENT</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>USE CASES</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>BENEFITS</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Mutual Funds</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Redemption collateral</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>-15bps cash drag</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Insurance</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Float collateral</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Tax-free daily yield</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Neobanks</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Cross-border</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>-30bps FX fee</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Healthcare</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Secure payment processors</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Prevent $9T breaches</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Corporate</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Intracompany</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Instant 24/7/365 global settlement</p>
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Unbanked</p>
  </td>
  <td width=252 valign=top style='width:189.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Mobile banking</p>
  </td>
  <td width=270 valign=top style='width:202.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Yield + access</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>1.4 PROJECT REFERENCES</b></p>

<p class=MsoNormal>[HTML] How to make a mint, <a
href="https://groups.csail.mit.edu/mac/classes/6.805/articles/money/nsamint/nsamint.htm">https://groups.csail.mit.edu/mac/classes/6.805/articles/money/nsamint/nsamint.htm</a></p>

<p class=MsoNormal>[HTML] XFT Docs 001, <a href="https://xft001.netlify.app/">https://xft001.netlify.app/</a></p>

<p class=MsoNormal>[Github] XFT Repo Protocol, <a
href="https://github.com/amr080/x-protocol">https://github.com/amr080/x-protocol</a></p>

<p class=MsoNormal>[HTML] XFT Summary Prospectus, <a
href="https://xft-sp001.netlify.app/">https://xft-sp001.netlify.app/</a></p>

<p class=MsoNormal>[mp4] USDX Coverage Report, <a
href="https://youtu.be/RbeZ66vL21Y">https://youtu.be/RbeZ66vL21Y</a></p>

<p class=MsoNormal>[mp4] USDX Cash Management Demo, <a
href="https://youtu.be/iZYY4Oc_Fac">https://youtu.be/iZYY4Oc_Fac</a></p>

<p class=MsoNormal>[HTML] USDX Demo Hub, <a name="_Hlk189346010"></a><a
href="https://xft.netlify.app/">https://xft.netlify.app/</a></p>

<p class=MsoNormal>[TXT] USDX Protocol, <a
href="https://xft001.netlify.app/assets/protocol.txt">https://xft001.netlify.app/assets/protocol.txt</a></p>

<p class=MsoNormal>[Mermaid] Contract Architecture and Inheritance, <a
href="https://github.com/amr080/x-protocol/blob/main/docs/contract_architecture_inheritance.mermaid">https://github.com/amr080/x-protocol/blob/main/docs/contract_architecture_inheritance.mermaid</a></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>2 SYSTEM OVERVIEW</b></p>

<p class=MsoNormal><b>2.1 FLOW OF FUNDS</b></p>

<p class=MsoNormal><img border=0 width=846 height=186
src="whitepaper_2020202_files/image002.png"
alt="A diagram of a financial system&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>2.2 HIGH-LEVEL SYSTEM ARCHITECTURE</b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><img border=0 width=497 height=660
src="whitepaper_2020202_files/image003.jpg"
alt="A diagram of a system&#10;&#10;Description automatically generated"></p>

<b><span style='font-size:11.0pt;font-family:"Arial",sans-serif'><br clear=all
style='page-break-before:always'>
</span></b>

<p class=MsoNormal><b>2.3 CORE COMPONENTS</b></p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr style='height:26.25pt'>
  <td width=173 style='width:1.8in;border:solid windowtext 1.0pt;padding:.05in .05in .05in .05in;
  height:26.25pt'>
  <p class=MsoNormal align=center style='text-align:center'>&nbsp;</p>
  </td>
  <td width=197 style='width:147.4pt;border:solid windowtext 1.0pt;border-left:
  none;padding:.05in .05in .05in .05in;height:26.25pt'>
  <p class=MsoNormal align=center style='text-align:center'>USDX</p>
  </td>
  <td width=211 style='width:157.9pt;border:solid windowtext 1.0pt;border-left:
  none;padding:.05in .05in .05in .05in;height:26.25pt'>
  <p class=MsoNormal align=center style='text-align:center'>wUSDX</p>
  </td>
 </tr>
 <tr style='height:26.25pt'>
  <td width=173 valign=top style='width:1.8in;border:solid windowtext 1.0pt;
  border-top:none;padding:.05in .05in .05in .05in;height:26.25pt'>
  <p class=MsoNormal>Token Type</p>
  </td>
  <td width=197 valign=top style='width:147.4pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:26.25pt'>
  <p class=MsoNormal>Rebasing</p>
  </td>
  <td width=211 valign=top style='width:157.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:26.25pt'>
  <p class=MsoNormal>Accumulating</p>
  </td>
 </tr>
 <tr style='height:79.1pt'>
  <td width=173 valign=top style='width:1.8in;border:solid windowtext 1.0pt;
  border-top:none;padding:.05in .05in .05in .05in;height:79.1pt'>
  <p class=MsoNormal>Yield Accrual Profile</p>
  </td>
  <td width=197 valign=top style='width:147.4pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:79.1pt'>
  <p class=MsoNormal>Reflected as a subdivision of USDX tokens into additional
  USDX tokens daily</p>
  </td>
  <td width=211 valign=top style='width:157.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:79.1pt'>
  <p class=MsoNormal>Reflected via increasing redemption price (reference token
  price)</p>
  </td>
 </tr>
 <tr style='height:52.65pt'>
  <td width=173 valign=top style='width:1.8in;border:solid windowtext 1.0pt;
  border-top:none;padding:.05in .05in .05in .05in;height:52.65pt'>
  <p class=MsoNormal>As Treasury Yield Accrues, the Token Price</p>
  </td>
  <td width=197 valign=top style='width:147.4pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:52.65pt'>
  <p class=MsoNormal>Remains at $1.00</p>
  </td>
  <td width=211 valign=top style='width:157.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:52.65pt'>
  <p class=MsoNormal>Increases</p>
  </td>
 </tr>
 <tr style='height:52.65pt'>
  <td width=173 valign=top style='width:1.8in;border:solid windowtext 1.0pt;
  border-top:none;padding:.05in .05in .05in .05in;height:52.65pt'>
  <p class=MsoNormal>Best suited for</p>
  </td>
  <td width=197 valign=top style='width:147.4pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:52.65pt'>
  <p class=MsoNormal>Yield-bearing collateral</p>
  </td>
  <td width=211 valign=top style='width:157.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:.05in .05in .05in .05in;height:52.65pt'>
  <p class=MsoNormal>Buy-and-hold cash management, collateral in smart
  contracts</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>2.3.1 USDX TOKEN</b></p>

<p class=MsoNormal>The USDX Token is an ERC20 compliant fungible token. It
implements administrative minting, burning, and rebasing functions to manage
the supply of the token.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>2.3.1.1 REBASING MECHANISM </b></p>

<p class=MsoNormal>The USDX token implements a rebasing mechanism to distribute
yield to token holders via a reward multiplier system. Advantages:</p>

<p class=MsoNormal style='margin-left:.25in'>1 Gas-efficient yield distribution</p>

<p class=MsoNormal style='margin-left:.25in'>2 No transfer operations required</p>

<p class=MsoNormal style='margin-left:.25in'>3 Automatic balance adjustments</p>

<p class=MsoNormal style='margin-left:.25in'>4 Precise share-based accounting</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>UPDATING THE REWARD MULTIPLIER</b></p>

<p class=MsoNormal>1 Yield accrues intraday; PM submits EOD yield data</p>

<p class=MsoNormal>2 Oracle verifies data and portfolio; contract validates
yield</p>

<p class=MsoNormal>3 addRewardMultiplier applies daily yield, increasing
rewardMultiplier</p>

<p class=MsoNormal>4 rewardMultiplier multiplies stored shares to compute
effective USDX balance</p>

<p class=MsoNormal>5 Transfers convert USDX to shares (e.g., 100 USDX =
100/1.047 shares)</p>

<p class=MsoNormal>6 Total supply adjusts as totalShares × rewardMultiplier,
optimizing gas</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>DATA FLOW</b></p>

<p class=MsoNormal>1 Portfolio calculates yield and triggers
addRewardMultiplier w/ positive increment</p>

<p class=MsoNormal>2 addRewardMultiplier verifies increment &gt; 0 and updates
rewardMultiplier by adding the increment</p>

<p class=MsoNormal>3 _setRewardMultiplier emits the new multiplier, affecting
share-to-token conversion</p>

<p class=MsoNormal>4 Mint/transfer functions use convertToShares: shares =
(amount × BASE) / rewardMultiplier</p>

<p class=MsoNormal>5 User balance = shares × rewardMultiplier / BASE,
reflecting accrued yield</p>

<p class=MsoNormal>6 Transfers update _shares and emit events, preserving yield
adjustments</p>

<p class=MsoNormal>7 Pausable and blocklist hooks ensure only valid transfers
proceed</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img border=0 width=678 height=410
src="whitepaper_2020202_files/image004.jpg"
alt="A diagram of a software company&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>1 Oracle calls addRewardMultiplier with yield increment</p>

<p class=MsoNormal>2 Internal multiplier updated</p>

<p class=MsoNormal style='text-indent:.5in'><span style='color:#C00000;
background:lightgrey'>newMultiplier = current + increment</span></p>

<p class=MsoNormal>3 Event emitted with new multiplier value</p>

<p class=MsoNormal>4 User balances update automatically through conversion
formula:</p>

<p class=MsoNormal style='text-indent:.5in'><span style='color:#C00000;
background:lightgrey'>tokens = shares * rewardMultiplier / BASE</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>2.3.2 WRAPPED USDX TOKEN</b></p>

<p class=MsoNormal>The Wrapped USDX Token is an ERC4626 compliant fungible
token vault. USDX is deposited into the Wrapped USDX smart contract in order to
facilitate interoperability and composability with common blockchain
applications and accounting systems. Users can withdraw USDX from the Wrapped
USDX contract at any time.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>2.3.3 RESERVE VAULT</b></p>

<p class=MsoNormal>The Reserves Vault is an onchain account holding the onchain
portion of the assets backing the value of USDX including yield generating
tokenized assets. The Reserves Vault will primary invest in short duration US
Treasury bills directly or indirectly.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>2.3.3 MINTER</b></p>

<p class=MsoNormal>The Minter handles USDX minting. It maintains list of
approved payment tokens and their price oracles. USDX is always minted at 1
USDX = 1 USD. When a user calls ‘deposit‘ on the Minter smart contract, the
deposit is processed immediately, sending payment token to the Reserves Vault
and minting USDX at the current oracle price for that payment token. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>2.3.3 REDEEMER</b></p>

<p class=MsoNormal>The Redeemer handles USDX burning. It also maintains a list
of approved payment tokens and their price oracles. USDX is always burned at 1
USDX = 1 USD. Burning USDX and sending payment token to the user is a two step
process that can take up to 2 business days to process. There may be delays
that take up to 2 days to process when liquidating the underlying investments
and converting to the requested payment token for distribution. When a user
calls ‘requestRedeem‘ on the Redeemer smart contract, the USDX is escrowed on
the Redeemer contract and the payment token price is taken at that time and the
payment token amount is fixed for that request. The protocol will then fulfill
the request if payment token is available in the Reserves Vault, or rebalance
assets and tokens to make payment token available before fulfilling the
redemption request.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>2.3.4 PROOF OF RESERVES</b></p>

<p class=MsoNormal>XFT maintains 1-to-1 backing in real time by determining if
any security purchases are necessary and executing those purchases for every
order request. When a request is received, if the current reserves are not
sufficient to maintain at least 100% backing, purchases of the the underlying
security are initiated. XFT publishes the latest order activity in real time
and current vault balances at regular intervals. XFT vault accounts are held by
a custodian and audited at random times by a third party to verify the
integrity of accounting and reporting.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3 PROTOCOL ARCHITECTURE</b></p>

<p class=MsoNormal>The USDX protocol provides a convenient and effective access
point to low risk yield on chain. The protocol is designed to be simple and
transparent, and to provide a clear and stable value for users. It is also
designed to be flexible and to be able to adapt to changing market conditions
and user needs.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.1 FEES AND BUSINESS MODEL</b></p>

<p class=MsoNormal>- Net investment income</p>

<p class=MsoNormal>- Distributed yield fee, 20%</p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><img border=0 width=504 height=504
src="whitepaper_2020202_files/image005.jpg"
alt="A diagram of a financial system&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.2 PROTOCOL FLOWS</b></p>

<p class=MsoNormal>The USDX protocol implements four core operations: minting,
transferring, yield distribution, and wrapping. Each flow represents a key
interaction with the protocol.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal style='margin-left:.5in'>MINT:                          <b><span
style='color:#C00000'>User &#8594; API &#8594; Auth/KYC &#8594; Reserve Check
&#8594; Custodian Webhook &#8594; Smart Contract &#8594; Mint Tokens</span></b></p>

<p class=MsoNormal style='margin-left:.5in'>YIELD:                        <b><span
style='color:#C00000'>Fund Admin &#8594; Oracle &#8594; Rate Service &#8594;
Smart Contract &#8594; Update Balances (Daily)</span></b></p>

<p class=MsoNormal style='margin-left:.5in'>REDEMPTION:           <b><span
style='color:#C00000'>User &#8594; API &#8594; Burn Request &#8594; Reserve
Deduction &#8594; Custodian Payout &#8594; Blockchain Update</span></b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.3 MINTING</b></p>

<p class=MsoNormal>Shows how new USDX tokens are created and distributed.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img border=0 width=294 height=680
src="whitepaper_2020202_files/image006.jpg"
alt="A flowchart of a business&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.3.1 USDX FUNDING STEPS</b></p>

<p class=MsoNormal>1 Investors deposit cash with USDX’s custodian.</p>

<p class=MsoNormal>2 USDX selects and invests in money market securities
according to the Investment Policy of the Fund.</p>

<p class=MsoNormal>3 Purchased securities are held at USDX’s custodian on
behalf of the Investors.</p>

<p class=MsoNormal>4 Returns on the portfolio may either be paid to investors
periodically or reinvested in the fund.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.4 TRANSFER</b></p>

<p class=MsoNormal>Shows internal share-based accounting during token
transfers.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img border=0 width=251 height=663
src="whitepaper_2020202_files/image007.jpg"
alt="A flowchart of a software company&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.5 YIELD DISTRIBUTION</b></p>

<p class=MsoNormal>Demonstrates how yield is automatically distributed via the
multiplier.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img border=0 width=248 height=358
src="whitepaper_2020202_files/image008.jpg"
alt="A diagram of a software development process&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.6 WRAPPING</b></p>

<p class=MsoNormal>Illustrates the interaction between USDX and wUSDX.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img border=0 width=253 height=576
src="whitepaper_2020202_files/image009.jpg"
alt="A diagram of a currency exchange&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.7 USDX SEQUENCES</b></p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 width=1110
 style='width:832.2pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=72 valign=top style='width:53.7pt;border:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal><a name="_Hlk189319579"><b>FLOW</b></a></p>
  </td>
  <td width=426 valign=top style='width:319.5pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal><b>USER</b></p>
  </td>
  <td width=612 valign=top style='width:459.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal><b>TECH</b></p>
  </td>
 </tr>
 <tr>
  <td width=72 valign=top style='width:53.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Mint</p>
  </td>
  <td width=426 valign=top style='width:319.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 Admin with MINTER_ROLE initiates mint operation</p>
  <p class=MsoNormal>2 Converts token amount to shares using current multiplier
  rate</p>
  <p class=MsoNormal>3 Updates internal accounting (shares and total shares)</p>
  <p class=MsoNormal>4 Records transaction with Transfer event</p>
  <p class=MsoNormal>&nbsp;</p>
  </td>
  <td width=612 valign=top style='width:459.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 MINTER_ROLE calls mint(to, amount)</p>
  <p class=MsoNormal>2 _beforeTokenTransfer invoked with from = address(0)</p>
  <p class=MsoNormal>3 convertToShares computes shares = (amount * _BASE) /
  rewardMultiplier</p>
  <p class=MsoNormal>4 _totalShares and _shares[to] are incremented</p>
  <p class=MsoNormal>5 _afterTokenTransfer emits Transfer(address(0), to,
  amount)</p>
  </td>
 </tr>
 <tr>
  <td width=72 valign=top style='width:53.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Transfer</p>
  </td>
  <td width=426 valign=top style='width:319.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 User initiates transfer with token amount</p>
  <p class=MsoNormal>2 System converts to shares for internal movement</p>
  <p class=MsoNormal>3 Adjusts share balances between accounts</p>
  <p class=MsoNormal>4 Converts back to tokens for recipient</p>
  </td>
  <td width=612 valign=top style='width:459.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 User calls transfer(to, amount) invoking
  _transfer(msg.sender, to, amount)</p>
  <p class=MsoNormal>2 _beforeTokenTransfer checks isBlocked and paused state</p>
  <p class=MsoNormal>3 Token amount converted to shares: shares = (amount *
  _BASE) / rewardMultiplier</p>
  <p class=MsoNormal>4 Deducts shares from sender and adds to recipient</p>
  <p class=MsoNormal>5 _afterTokenTransfer emits Transfer(from, to, amount)</p>
  </td>
 </tr>
 <tr>
  <td width=72 valign=top style='width:53.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Yield</p>
  </td>
  <td width=426 valign=top style='width:319.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 Oracle updates reward multiplier</p>
  <p class=MsoNormal>2 Increases global multiplier value</p>
  <p class=MsoNormal>3 All token balances automatically increase</p>
  </td>
  <td width=612 valign=top style='width:459.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 ORACLE_ROLE calls addRewardMultiplier(increment)</p>
  <p class=MsoNormal>2 _setRewardMultiplier validates increment and updates
  rewardMultiplier</p>
  <p class=MsoNormal>3 Emits RewardMultiplier event</p>
  <p class=MsoNormal>4 Balances update automatically via
  convertToTokens(shares) using new multiplier</p>
  </td>
 </tr>
 <tr>
  <td width=72 valign=top style='width:53.7pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>Wrap</p>
  </td>
  <td width=426 valign=top style='width:319.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 User deposits USDX into wUSDX vault</p>
  <p class=MsoNormal>2 Receives equivalent wUSDX tokens</p>
  <p class=MsoNormal>3 Vault holds rebasing USDX</p>
  <p class=MsoNormal>4 Withdrawal returns original + yield</p>
  </td>
  <td width=612 valign=top style='width:459.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>1 User calls wUSDX.deposit(assets)</p>
  <p class=MsoNormal>2 USDX.transferFrom transfers tokens to wUSDX vault</p>
  <p class=MsoNormal>3 ERC4626.deposit converts assets to vault shares and
  mints tokens 1:1</p>
  <p class=MsoNormal>4 Vault holds rebasing USDX; withdrawal returns USDX with
  accrued yield</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.7.1 MINT / REDEEM OVERVIEW</b></p>

<p class=MsoNormal><img border=0 width=306 height=649
src="whitepaper_2020202_files/image010.jpg"
alt="A diagram of a blockchain&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>1 User sends USDC/USDX to Minter</p>

<p class=MsoNormal>2 Minter forwards USDC to Fiat-Crypto Conversion</p>

<p class=MsoNormal>3 FCC converts USDC to USD for TBills Fund</p>

<p class=MsoNormal>4 TBills returns USD to FCC</p>

<p class=MsoNormal>5 FCC sends USDC to Redeemer</p>

<p class=MsoNormal>6 TBills yields USDX tokens</p>

<p class=MsoNormal>7 USDX redeems through Redeemer</p>

<p class=MsoNormal>8 Redeemer returns USDC/USDX to User</p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.7.2 MINT</b></p>

<p class=MsoNormal>Authorization</p>

<p class=MsoNormal>1. User submits deposit request via POST /mint</p>

<p class=MsoNormal>{ &quot;amount&quot;: &quot;1000.00&quot;,
&quot;currency&quot;: &quot;USD&quot; }</p>

<p class=MsoNormal>2. API validates KYC/AML status</p>

<p class=MsoNormal>3. Custodian confirms deposit via webhook</p>

<p class=MsoNormal>Processing</p>

<p class=MsoNormal>4. Calculate shares = amount / rewardMultiplier</p>

<p class=MsoNormal>5. Verify reserves via GET /reserves</p>

<p class=MsoNormal>6. Execute mint() function</p>

<p class=MsoNormal>Settlement</p>

<p class=MsoNormal>7. Send USDX tokens to user address</p>

<p class=MsoNormal>8. Update total supply</p>

<p class=MsoNormal>9. API returns tx_hash via GET /tx-status/{tx_hash}</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b><span style='color:#C00000'>User &#8594; API &#8594;
Auth/KYC &#8594; Reserve Check &#8594; Custodian Webhook &#8594; Smart Contract
&#8594; Mint Tokens</span></b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.7.3 BURN</b></p>

<p class=MsoNormal>Authorization</p>

<p class=MsoNormal>1. User submits withdraw request via POST /burn</p>

<p class=MsoNormal>{ &quot;amount&quot;: &quot;1000.00&quot;,
&quot;destination&quot;: &quot;bank_account_id&quot; }</p>

<p class=MsoNormal>2. API verifies USDX balance via GET /balance/{address}</p>

<p class=MsoNormal>3. Validates user not blocked</p>

<p class=MsoNormal>Processing</p>

<p class=MsoNormal>4. Contract calculates shares = amount / rewardMultiplier</p>

<p class=MsoNormal>5. Execute burn()</p>

<p class=MsoNormal>6. Trigger custodian payout</p>

<p class=MsoNormal>Settlement</p>

<p class=MsoNormal>7. Custodian releases funds via ACH API</p>

<p class=MsoNormal>9. Update total supply</p>

<p class=MsoNormal>10. Return redemption confirmation</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b><span style='color:#C00000'>User &#8594; API &#8594; Burn
Request &#8594; Reserve Deduction &#8594; Custodian Payout &#8594; Blockchain
Update</span></b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>3.8 USDX REDEMPTION</b></p>

<p class=MsoNormal><img border=0 width=728 height=506
src="whitepaper_2020202_files/image011.jpg"
alt="A diagram of a process&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.9 YIELD DISTRIBUTION</b></p>

<p class=MsoNormal>Authorization</p>

<p class=MsoNormal>1. Triggered by rewardMultiplier update</p>

<p class=MsoNormal>2. Contract verifies new multiplier</p>

<p class=MsoNormal>3. Validates rebase timing</p>

<p class=MsoNormal>Processing</p>

<p class=MsoNormal>4. Calculate new totalSupply = totalShares ×
rewardMultiplier</p>

<p class=MsoNormal>5. Verify proof of reserves matches new supply</p>

<p class=MsoNormal>Settlement</p>

<p class=MsoNormal>6. All user balances update via shares formula:</p>

<p class=MsoNormal>balanceOf = shares × rewardMultiplier</p>

<p class=MsoNormal>7. Record new state</p>

<p class=MsoNormal>8. Emit Rebase event</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.9.1 REWARD MULTIPLIER</b></p>

<p class=MsoNormal>Authorization</p>

<p class=MsoNormal>1. Fund calculates daily T-bill yield intraday</p>

<p class=MsoNormal>2. PM submits EOD rate to Oracle</p>

<p class=MsoNormal>3. Oracle validates portfolio data</p>

<p class=MsoNormal>4. Smart contract verifies oracle signature</p>

<p class=MsoNormal>Processing</p>

<p class=MsoNormal>5. Calculate daily yield rate = (NAV_new - NAV_old)/NAV_old</p>

<p class=MsoNormal>6. Format oracle data:</p>

<p class=MsoNormal>{ &quot;daily_rate&quot;: &quot;0.000080986&quot;,
&quot;timestamp&quot;: 1625097600, &quot;signature&quot;: &quot;0x...&quot; }</p>

<p class=MsoNormal>7. Update rewardMultiplier = current × (1 + daily_rate)</p>

<p class=MsoNormal>Settlement</p>

<p class=MsoNormal>8. Store new rewardMultiplier</p>

<p class=MsoNormal>9. Emit YieldCalculated event</p>

<p class=MsoNormal>10. Trigger distribution</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b><span style='color:#C00000'>Fund Admin &#8594; Oracle
&#8594; Rate Service &#8594; Smart Contract &#8594; Update Balances (Daily)</span></b></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.10 TRANSFER</b></p>

<p class=MsoNormal>Holders can use their wallet or XFT API to move tokens.
Stablecoin payment outlines the steps for transfering via <i>wallet</i>. </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.10.1 API </b></p>

<p class=MsoNormal>Authorization</p>

<p class=MsoNormal>1. User initiates via POST /transfer</p>

<p class=MsoNormal>{ &quot;to&quot;: &quot;0x123...&quot;, &quot;amount&quot;:
&quot;100.00&quot; }</p>

<p class=MsoNormal>2. Contract checks paused() status</p>

<p class=MsoNormal>3. Verifies sender/receiver not blocked</p>

<p class=MsoNormal>4. Validates sufficient balance</p>

<p class=MsoNormal>Processing</p>

<p class=MsoNormal>5. Convert tokens to shares = amount / rewardMultiplier</p>

<p class=MsoNormal>6. Execute share transfer</p>

<p class=MsoNormal>Settlement</p>

<p class=MsoNormal>7. Update balances</p>

<p class=MsoNormal>8. Record transfer</p>

<p class=MsoNormal>9. Return confirmation</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>3.10.2 STABLECOIN PAYMENT</b></p>

<p class=MsoNormal>Authorization</p>

<p class=MsoNormal>1. Sender initiates a transfer via their wallet.</p>

<p class=MsoNormal>2. Transaction is broadcast to the blockchain network.</p>

<p class=MsoNormal>3. Network verifies sender’s balance and transaction
validity.</p>

<p class=MsoNormal>4. Transaction is approved and added to the blockchain.</p>

<p class=MsoNormal>Processing</p>

<p class=MsoNormal>5. Transaction is processed on the blockchain.</p>

<p class=MsoNormal>6. Smart contracts execute any required conditions.</p>

<p class=MsoNormal>7. Network nodes confirm the transaction.</p>

<p class=MsoNormal>Settlement</p>

<p class=MsoNormal>8. Stablecoin is credited to the recipient’s wallet.</p>

<p class=MsoNormal>9. Transaction is permanently recorded on the blockchain.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>4 INVESTMENT COMPANY</b></p>

<p class=MsoNormal>XFT is a closed-end fund registered under the Investment
Company Act of 1940. We comply and are regulated by the United States Securities
and Exchange Commission. </p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>4.1 PROSPECTUS TERMS</b></p>

<p class=MsoNormal>Structure <span style='color:#C00000'>Tender</span></p>

<p class=MsoNormal>Listed <span style='color:#C00000'>N/A</span></p>

<p class=MsoNormal>CEF Ticker <span style='color:#C00000'>XFT</span></p>

<p class=MsoNormal>Token Ticker <span style='color:#C00000'>USDX</span></p>

<p class=MsoNormal>NAV Ticker <span style='color:#C00000'>USDXW</span></p>

<p class=MsoNormal>Location <span style='color:#C00000'>NY</span></p>

<p class=MsoNormal>State of Incorporation <span style='color:#C00000'>DE</span></p>

<p class=MsoNormal>Maryland Act <span style='color:#C00000'>TRUE</span></p>

<p class=MsoNormal>Staggered Board <span style='color:#C00000'>YES</span></p>

<p class=MsoNormal>Distribution Policy <span style='color:#C00000'>Managed</span></p>

<p class=MsoNormal>Distribution Frequency<span style='color:#C00000'> D</span></p>

<p class=MsoNormal>Internally / Externally Managed <span style='color:#C00000'>E</span></p>

<p class=MsoNormal>Investment Objective <span style='color:#C00000'>High level
of tax-free current income</span></p>

<p class=MsoNormal>Minimum Investment <span style='color:#C00000'>2500</span></p>

<p class=MsoNormal>Suitability <span style='color:#C00000'>Non-Accredited</span></p>

<p class=MsoNormal>NAV Frequency <span style='color:#C00000'>Continuous</span></p>

<p class=MsoNormal>Incentive Fee <span style='color:#C00000'>TRUE</span></p>

<p class=MsoNormal>Incentive Type <span style='color:#C00000'>NNI</span></p>

<p class=MsoNormal>Incentive Details <span style='color:#C00000'>20% of the
incentive fee is calculated and payable quarterly in arrears based upon the
Fund’s “pre-incentive fee net investment income” for the immediately preceding
quarter</span></p>

<p class=MsoNormal>Repurchase Frequency <span style='color:#C00000'>Discretion</span></p>

<p class=MsoNormal>Repurchased Securities <span style='color:#C00000'>Tokens</span></p>

<p class=MsoNormal>Securities Act <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>Non-diversified <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>Security Lending Authorized <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>Fund Lend Securities <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>Expense Limitation Arrangement <span style='color:#C00000'>TRUE</span></p>

<p class=MsoNormal>Expenses Waived <span style='color:#C00000'>TRUE</span></p>

<p class=MsoNormal>Rights Offerings <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>Secondary Offerings<span style='color:#C00000'> FALSE</span></p>

<p class=MsoNormal>Default on long term debt <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>Dividends in Arrears <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>Modified Securities <span style='color:#C00000'>FALSE</span></p>

<p class=MsoNormal>PORTFOLIO </p>

<p class=MsoNormal>Main Group <span style='color:#C00000'>National Muni Bond
Funds</span></p>

<p class=MsoNormal>Sub-Group <span style='color:#C00000'>National Municipal
(tax-free) Bond</span></p>

<p class=MsoNormal>Category <span style='color:#C00000'>Bond Funds</span></p>

<p class=MsoNormal>Sub-Category <span style='color:#C00000'>Muni Bond</span></p>

<p class=MsoNormal>Benchmark <span style='color:#C00000'>CEFA's National
Municipal Bond Index</span></p>

<p class=MsoNormal>PARTIES</p>

<p class=MsoNormal>Sponsor <span style='color:#C00000'>XFT</span></p>

<p class=MsoNormal>Advisor <span style='color:#C00000'>Franklin Templeton</span></p>

<p class=MsoNormal>Subadvisor <span style='color:#C00000'>Guggenheim</span></p>

<p class=MsoNormal>Custodian <span style='color:#C00000'>The Bank of New York
Mellon</span></p>

<p class=MsoNormal>Transfer Agent<span style='color:#C00000'> XFT</span></p>

<p class=MsoNormal>Underwriters <span style='color:#C00000'>Oppenheimer &amp;
Co. Inc.</span></p>

<p class=MsoNormal>Administrators <span style='color:#C00000'>The Bank of New
York Mellon</span></p>

<p class=MsoNormal>Accountants <span style='color:#C00000'>KPMG LLP</span></p>

<p class=MsoNormal>Pricing Services<span style='color:#C00000'> ICE</span></p>

<p class=MsoNormal>Fiat Onramp <span style='color:#C00000'>Visa, Brex, GS, RBC</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>4.2 STRUCTURE</b></p>

<p class=MsoNormal><img border=0 width=370 height=370
src="whitepaper_2020202_files/image012.jpg"
alt="A diagram of a company&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>4.3 SERVICE PROVIDERS</b></p>

<p class=MsoNormal>Sponsor, <span style='color:#C00000'>XFT</span></p>

<p class=MsoNormal>Subadvisor, <span style='color:#C00000'>Guggenheim
Securities</span></p>

<p class=MsoNormal>Fund Admin &amp; Custodian, <span style='color:#C00000'>The
Bank of New York Mellon</span></p>

<p class=MsoNormal>Fund Manager , <span style='color:#C00000'>Franklin
Templeton</span></p>

<p class=MsoNormal>Auditor , <span style='color:#C00000'>KPMG LLP</span></p>

<p class=MsoNormal>Transfer Agent, <span style='color:#C00000'>XFT</span></p>

<p class=MsoNormal>Prime Brokerage, <span style='color:#C00000'>GS, RBC</span></p>

<p class=MsoNormal>Fiat &lt;&gt; Stablecoin, <span style='color:#C00000'>Visa,
Bridge</span></p>

<p class=MsoNormal>Pricing Services, <span style='color:#C00000'>ICE</span></p>

<p class=MsoNormal>Underwriters, <span style='color:#C00000'>Oppenheimer &amp;
Co. Inc.</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;background:#0E2841'><span
style='color:white'>APPENDIX</span></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>5 CONTRACT ARCHITECTURE AND INHERITANCE</b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><img border=0 width=570 height=646
src="whitepaper_2020202_files/image013.jpg"
alt="A screenshot of a computer&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal>Enlarged image: <a
href="https://github.com/amr080/x-protocol/blob/main/docs/contract_architecture_inheritance.mermaid">github.com/amr080/x-protocol/blob/main/docs/contract_architecture_inheritance.mermaid</a></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>6 PROTOCOL TXT</b></p>

<p class=MsoNormal><b>6.1 SMART CONTRACTS</b></p>

<p class=MsoNormal><b>6.1.1 USDX.sol</b></p>

<p class=MsoNormal>Public and External Functions</p>

<p class=MsoNormal>initialize(string memory name_, string memory symbol_,
address owner): Initializes the contract.</p>

<p class=MsoNormal>name(): Returns the name of the token.</p>

<p class=MsoNormal>symbol(): Returns the symbol of the token.</p>

<p class=MsoNormal>decimals(): Returns the number of decimals the token uses.</p>

<p class=MsoNormal>convertToShares(uint256 amount): Converts an amount of
tokens to shares.</p>

<p class=MsoNormal>convertToTokens(uint256 shares): Converts an amount of
shares to tokens.</p>

<p class=MsoNormal>totalShares(): Returns the total amount of shares.</p>

<p class=MsoNormal>totalSupply(): Returns the total supply.</p>

<p class=MsoNormal>balanceOf(address account): Returns the account balance.</p>

<p class=MsoNormal>sharesOf(address account): Returns the account shares.</p>

<p class=MsoNormal>mint(address to, uint256 amount): Creates new tokens to the
specified address.</p>

<p class=MsoNormal>burn(address from, uint256 amount): Destroys tokens from the
specified address.</p>

<p class=MsoNormal>transfer(address to, uint256 amount): Transfers tokens
between addresses.</p>

<p class=MsoNormal>blockAccounts(address[] addresses): Blocks multiple accounts
at once.</p>

<p class=MsoNormal>unblockAccounts(address[] addresses): Unblocks multiple
accounts at once.</p>

<p class=MsoNormal>isBlocked(address account): Checks if an account is blocked.</p>

<p class=MsoNormal>pause(): Pauses the contract, halting token transfers.</p>

<p class=MsoNormal>unpause(): Unpauses the contract, allowing token transfers.</p>

<p class=MsoNormal>setRewardMultiplier(uint256 _rewardMultiplier): Sets the
reward multiplier.</p>

<p class=MsoNormal>addRewardMultiplier(uint256 _rewardMultiplierIncrement):
Adds the given amount to the current reward multiplier.</p>

<p class=MsoNormal>approve(address spender, uint256 amount): Approves an
allowance for a spender.</p>

<p class=MsoNormal>allowance(address owner, address spender): Returns the allowance
for a spender.</p>

<p class=MsoNormal>transferFrom(address from, address to, uint256 amount):
Moves tokens from an address to another one using the allowance mechanism.</p>

<p class=MsoNormal>increaseAllowance(address spender, uint256 addedValue):
Increases the allowance granted to spender by the caller.</p>

<p class=MsoNormal>decreaseAllowance(address spender, uint256 subtractedValue):
Decreases the allowance granted to spender by the caller.</p>

<p class=MsoNormal>DOMAIN_SEPARATOR(): Returns the EIP-712 domain separator.</p>

<p class=MsoNormal>nonces(address owner): Returns the nonce for the specified
address.</p>

<p class=MsoNormal>permit(address owner, address spender, uint256 value,
uint256 deadline, uint8 v, bytes32 r, bytes32 s): Implements EIP-2612 permit
functionality.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Private and Internal Functions</p>

<p class=MsoNormal>_authorizeUpgrade(address newImplementation): Internal
function to authorize an upgrade.</p>

<p class=MsoNormal>_mint(address to, uint256 amount): Internal function to mint
tokens to the specified address.</p>

<p class=MsoNormal>_burn(address account, uint256 amount): Internal function to
burn tokens from the specified address.</p>

<p class=MsoNormal>_beforeTokenTransfer(address from, address to, uint256
amount): Hook that is called before any transfer of tokens.</p>

<p class=MsoNormal>_afterTokenTransfer(address from, address to, uint256
amount): Hook that is called after any transfer of tokens.</p>

<p class=MsoNormal>_transfer(address from, address to, uint256 amount):
Internal function to transfer tokens between addresses.</p>

<p class=MsoNormal>_blockAccount(address account): Internal function to block
account.</p>

<p class=MsoNormal>_unblockAccount(address account): Internal function to
unblock an account.</p>

<p class=MsoNormal>_setRewardMultiplier(uint256 _rewardMultiplier): Internal
function to set the reward multiplier.</p>

<p class=MsoNormal>_spendAllowance(address owner, address spender, uint256
amount): Internal function to spend an allowance.</p>

<p class=MsoNormal>_useNonce(address owner): Increments and returns the current
nonce for a given address.</p>

<p class=MsoNormal>_approve(address owner, address spender, uint256 amount):
Internal function to approve an allowance for a spender.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Events</p>

<p class=MsoNormal>Transfer(from indexed addr, to uint256, amount uint256):
Emitted when transferring tokens.</p>

<p class=MsoNormal>RewardMultiplier(uint256 indexed value): Emitted when the
reward multiplier has changed.</p>

<p class=MsoNormal>Approval(address indexed owner, address indexed spender,
uint256 value): Emitted when the allowance of a spender for an owner is set.</p>

<p class=MsoNormal>AccountBlocked(address indexed addr): Emitted when an
address is blocked.</p>

<p class=MsoNormal>AccountUnblocked(address indexed addr): Emitted when an
address is removed from the blocklist.</p>

<p class=MsoNormal>Paused(address account): Emitted when the pause is triggered
by account.</p>

<p class=MsoNormal>Unpaused(address account): Emitted when the unpause is
triggered by account.</p>

<p class=MsoNormal>Upgraded(address indexed implementation): Emitted when the
implementation is upgraded.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Roles</p>

<p class=MsoNormal>DEFAULT_ADMIN_ROLE: Grants the ability to grant roles.</p>

<p class=MsoNormal>MINTER_ROLE: Grants the ability to mint tokens.</p>

<p class=MsoNormal>BURNER_ROLE: Grants the ability to burn tokens.</p>

<p class=MsoNormal>BLOCKLIST_ROLE: Grants the ability to manage the blocklist.</p>

<p class=MsoNormal>ORACLE_ROLE: Grants the ability to update the reward
multiplier.</p>

<p class=MsoNormal>UPGRADE_ROLE: Grants the ability to upgrade the contract.</p>

<p class=MsoNormal>PAUSE_ROLE: Grants the ability to pause/unpause the
contract.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>6.1.2 wUSDX.sol</b></p>

<p class=MsoNormal>Public and External Functions</p>

<p class=MsoNormal>initialize(IUSDX _USDX, address owner): Initializes the
contract.</p>

<p class=MsoNormal>pause(): Pauses the contract, halting token transfers.</p>

<p class=MsoNormal>unpause(): Unpauses the contract, allowing token transfers.</p>

<p class=MsoNormal>paused(): Returns true if USDX or wUSDX is paused, and false
otherwise.</p>

<p class=MsoNormal>DOMAIN_SEPARATOR(): Returns the EIP-712 domain separator.</p>

<p class=MsoNormal>nonces(address owner): Returns the nonce for the specified
address.</p>

<p class=MsoNormal>permit(address owner, address spender, uint256 value,
uint256 deadline, uint8 v, bytes32 r, bytes32 s): Implements EIP-2612 permit
functionality.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Private and Internal Functions</p>

<p class=MsoNormal>_beforeTokenTransfer(address from, address to, uint256
amount): Hook that is called before any transfer of tokens.</p>

<p class=MsoNormal>_authorizeUpgrade(address newImplementation): Internal
function to authorize an upgrade.</p>

<p class=MsoNormal>_useNonce(address owner): Increments and returns the current
nonce for a given address.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Events</p>

<p class=MsoNormal>Transfer(from indexed addr, to uint256, amount uint256):
Emitted when transferring tokens.</p>

<p class=MsoNormal>Approval(address indexed owner, address indexed spender,
uint256 value): Emitted when the allowance of a spender for an owner is set.</p>

<p class=MsoNormal>Paused(address account): Emitted when the pause is triggered
by account.</p>

<p class=MsoNormal>Unpaused(address account): Emitted when the unpause is
triggered by account.</p>

<p class=MsoNormal>Upgraded(address indexed implementation): Emitted when the
implementation is upgraded.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Roles</p>

<p class=MsoNormal>DEFAULT_ADMIN_ROLE: Grants the ability to grant roles.</p>

<p class=MsoNormal>UPGRADE_ROLE: Grants the ability to upgrade the contract.</p>

<p class=MsoNormal>PAUSE_ROLE: Grants the ability to pause/unpause the
contract.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>6.2 FEATURES</b></p>

<p class=MsoNormal>Access Control</p>

<p class=MsoNormal>Rebasing token mechanism</p>

<p class=MsoNormal>Minting and burning functionality</p>

<p class=MsoNormal>Block/Unblock accounts</p>

<p class=MsoNormal>Pausing emergency stop mechanism</p>

<p class=MsoNormal>Reward multiplier system</p>

<p class=MsoNormal>EIP-2612 permit support</p>

<p class=MsoNormal>OpenZeppelin UUPS upgrade pattern</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>7 DEPLOYMENTS</b></p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 width=930
 style='width:697.2pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=102 valign=top style='width:76.2pt;border:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal>&nbsp;</p>
  </td>
  <td width=403 valign=top style='width:302.1pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>IMPLEMENTATION</p>
  </td>
  <td width=425 valign=top style='width:318.9pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>PROXY</p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>USDX</p>
  </td>
  <td width=403 valign=top style='width:302.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal><a
  href="https://www.google.com/url?q=https://sepolia.etherscan.io/address/0x00232a7793ca38320a12893c53547543c79546b8&amp;sa=D&amp;source=editors&amp;ust=1738448597816893&amp;usg=AOvVaw3aE8lkRY0fGYU0BdfSgXoG"
  target="_blank">0x00232a7793CA38320A12893c53547543C79546b8</a></p>
  </td>
  <td width=425 valign=top style='width:318.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal><a
  href="https://www.google.com/url?q=https://sepolia.etherscan.io/address/0x81536233C3FfaEa0198D7B5Ce8dEceDf3C520A66&amp;sa=D&amp;source=editors&amp;ust=1738448597816953&amp;usg=AOvVaw0yDQaiGrBgd3qfUlRw24Q6"
  target="_blank">0x81536233C3FfaEa0198D7B5Ce8dEceDf3C520A66</a></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 0in 0in 0in'>
  <p class=MsoNormal>wUSDX</p>
  </td>
  <td width=403 valign=top style='width:302.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal><a
  href="https://www.google.com/url?q=https://sepolia.etherscan.io/address/0xfa52c849f1d5ec11d83a48281b9368856a16f1e0&amp;sa=D&amp;source=editors&amp;ust=1738448597817219&amp;usg=AOvVaw1PDamFhvKg6Vk15U9uW2of"
  target="_blank">0xfA52C849F1d5EC11D83a48281b9368856A16f1e0</a></p>
  </td>
  <td width=425 valign=top style='width:318.9pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 0in 0in 0in'>
  <p class=MsoNormal><a
  href="https://www.google.com/url?q=https://sepolia.etherscan.io/address/0xDB45A2137EfdfBe8a1F4EaDCCda8b56990B22361&amp;sa=D&amp;source=editors&amp;ust=1738448597817259&amp;usg=AOvVaw1oDtKKDkilIeWiMydr9H7H"
  target="_blank">0xDB45A2137EfdfBe8a1F4EaDCCda8b56990B22361</a></p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>8 MONEY MARKET FUND ENGINE</b></p>

<p class=MsoNormal>1 Investors deposit cash with MMF’s custodian.</p>

<p class=MsoNormal>2 The MMF selects and invests in money market securities
according to the Investment Policy of the Fund.</p>

<p class=MsoNormal>3 Purchased securities are held at the MMF’s custodian on
behalf of the Investors.</p>

<p class=MsoNormal>4 Returns on the portfolio may either be paid to investors
periodically or reinvested in the fund.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>9 HOW DO PAYMENTS WORK?</b></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img border=0 width=594 height=582
src="whitepaper_2020202_files/image014.jpg"
alt="A diagram of a payment method&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>9.1 WITHDRAWAL</b></p>

<p class=MsoNormal>1 Alice sends a withdrawal request to the Bank.</p>

<p class=MsoNormal>2 Bank prepares an electronic coin and digitally signs it.</p>

<p class=MsoNormal>3 Bank sends coin to Alice and debits her account.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>9.2 PAYMENT/DEPOSIT</b></p>

<p class=MsoNormal>1 Alice gives Bob the coin.</p>

<p class=MsoNormal>2 Bob contacts Bank5 and sends coin.</p>

<p class=MsoNormal>3 Bank verifies the Bank's digital signature.</p>

<p class=MsoNormal>4 Bank verifies that coin has not already been spent.</p>

<p class=MsoNormal>5 Bank consults its withdrawal records to confirm Alice's
withdrawal. (optional)</p>

<p class=MsoNormal>6 Bank enters coin in spent-coin database.</p>

<p class=MsoNormal>7 Bank credits Bob's account and informs Bob.</p>

<p class=MsoNormal>8 Bob gives Alice the merchandise.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>One should keep in mind that the term &quot;Bank&quot;
refers to the financial system that issues and clears the coins. For example,
the Bank might be a credit card company, or the overall banking system. In the
latter case, Alice and Bob might have separate banks. If that is so, then the
&quot;deposit&quot; procedure is a little more complicated: Bob's bank contacts
Alice's bank, &quot;cashes in&quot; the coin, and puts the money in Bob's
account.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;background:#0E2841'><b><span
style='color:white'>COMPARABLES</span></b></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>10 FOBXX CASH MANAGEMENT</b></p>

<p class=MsoNormal><img border=0 width=1085 height=654
src="whitepaper_2020202_files/image015.jpg"
alt="A diagram of a company&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal><b>11 BUIDL / SECURITIZE</b></p>

<p class=MsoNormal><b>11.1 USD_SUBSCRIPTION</b></p>

<p class=MsoNormal>For subscription into BUIDL, the investor must first
complete onboarding with Securitize. This includes all KYC/B requirements for
approval into the fund. Once approved, the investor will sign the BUIDL
subscription agreement and will be provided with USD funding instructions via
the Securitize platform UI. Upon receipt of funds, tokens will be minted to the
wallet address provided during the subscription process. Funds must be received
prior to the daily cutoff time (2:30 PM ET each business day) in order to be
minted the same day. Newly minted tokens will have a 24-hour lock-up period.</p>

<p class=MsoNormal><img border=0 width=935 height=566 id="Picture 1"
src="whitepaper_2020202_files/image016.png" alt=image></p>

<p class=MsoNormal><b>11.2 USD REDEMPTION</b></p>

<p class=MsoNormal>Investors may redeem directly with the Fund to receive USD
via wire transfer to the bank account stored on the records of the Transfer
Agent. Redemptions are initiated by sending tokens to the redemption wallet,
which can be facilitated through the Securitize platform UI or by directly
sending tokens to the redemption wallet. Tokens must be received into the
records of the Transfer Agent by the cutoff time (3:00 PM ET each business day)
for same day processing of the wire payment. Redemptions received after the
cutoff time will be paid during the next operating day of the fund.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>11.3 SALE FOR USDC VIA SECONDARY MARKET</b></p>

<p class=MsoNormal>BUIDL shareholders may also engage directly with Circle in a
secondary market transaction to transfer their BUIDL position to Circle in
exchange for USDC, in which a smart contract that facilitates a 1:1 atomic swap
of BUIDL for USDC. This secondary market is available 24/7/365, but is at the
discretion of Circle and is not guaranteed… Transactions can be facilitated
through the Securitize platform UI, or by directly interacting with smart
contracts. The smart contract facilitates the exchange by sending USDC to the
sending address of the BUIDL.</p>

<p class=MsoNormal><img border=0 width=690 height=421 id="Picture 2"
src="whitepaper_2020202_files/image017.png" alt=image></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>12 TOKEN TYPES TABLE FORMAT</b></p>

<p class=MsoNormal>Top 0.05”</p>

<p class=MsoNormal>Bottom 0.05”</p>

<p class=MsoNormal>Left 0.05”</p>

<p class=MsoNormal>Right 0.05”</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>13 CUSTODIAL FLOW OF FUNDS </b></p>

<p class=MsoNormal><img border=0 width=1049 height=614 id="Picture 5"
src="whitepaper_2020202_files/image018.png"
alt="A screenshot of a computer&#10;&#10;Description automatically generated"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>14 FLOW OF FUNDS</b></p>

<p class=MsoNormal><img border=0 width=1063 height=577 id="Picture 6"
src="whitepaper_2020202_files/image019.png"
alt="A diagram with text and images&#10;&#10;Description automatically generated with medium confidence"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>[INTENTIONALLY BLANK]</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>[INTENTIONALLY BLANK]</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>[INTENTIONALLY BLANK]</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>[INTENTIONALLY BLANK]</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
